module shell

import stream (Stream, takeS)
-- import pycore (ifelse)

export headF
-- export takeS
-- export streamLinesTextF
-- export streamLinesGzipF
-- export writeLinesF
-- export printL
-- export isgzF
-- export isFastq


source Py from "shell.py"
  ( "streamLinesTextF"
  -- , "streamLinesGzipF"
  -- , "writeLinesF"
  -- , "printL"
  -- , "isgzF"
  -- , "isFastq"
  )

type Filename = Str
type Py Filename = "str"

streamLinesTextF :: Filename -> Stream Str
streamLinesTextF Py :: "str" -> "iterator" "str"

streamLinesGzipF :: Filename -> Stream Str
streamLinesGzipF Py :: "str" -> "iterator" "str"

writeLinesF :: [Str] -> Filename -> ()
writeLinesF Py :: ["str"] -> "str" -> "None"

printL :: [Str] -> ()
printL Py :: ["str"] -> "None"

isgzF :: Filename -> Bool
isgzF Py :: "str" -> "bool"

isFastq :: Filename -> Bool
isFastq Py :: "str" -> "bool"

headF :: Int -> Filename -> ()
headF Py :: "int" -> "str" -> "None"

headF i x = printL (ifelse (isgzF x) (takeS i (streamLinesGzipF x)) (takeS i (streamLinesTextF x)))
