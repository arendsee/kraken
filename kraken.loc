module kraken
  ( KrakenConfig
  , krakenHelp
  , krakenVersion
  , krakenPaired
  , krakenMPA
  )

import conventions (Map, Str, Int, Real, Bool, Filename)
import table (Table, headT)

record KrakenConfig = KrakenConfig
  { threads    :: Int  -- Number of threads (default: 1)
  , checkNames :: Bool -- Ensure each pair of reads have names that agree
  , db         :: Str  -- Name for Kraken DB (default: none)
  , minHits    :: Int  -- In quick op., number of hits req'd for classification
  , preload    :: Bool -- Loads DB into memory before classification
  , quick      :: Bool -- Quick operation (use first hit or hits)
  }

record Py KrakenConfig = "dict" -- record is stored as a Python dictionary
  { threads    :: "int"  --
  , checkNames :: "bool" -- The python types aligning to each general type
  , db         :: "str"  --
  , minHits    :: "int"  --
  , preload    :: "bool" --
  , quick      :: "bool" --
  }

source Py from "kraken.py"
  ( "krakenPaired"
  , "krakenMPA"
  , "krakenVersion"
  , "krakenHelp"
  )

krakenPaired :: KrakenConfig -> r1:Filename -> r2:Filename -> Table
krakenPaired Py :: KrakenConfig -> r1:Filename -> r2:Filename -> Table

krakenMPA :: KrakenConfig -> Table -> Map Str Int
krakenMPA Py :: KrakenConfig -> Table -> Map Str Int

krakenHelp :: () -> Str
krakenVersion :: () -> Str
